<!DOCTYPE html>
<html lang="en">

<head>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

  <style>
     .button-space {
    margin: 0 10px; /* Adjust the margin value to create the desired space */
  }
     .button-container {
    display: flex;
    justify-content: center;
  }
    
    .custom-form-width {
      max-width: 100%; /* Adjust the value as per your requirement */
      margin: 0 auto;
    }
    
    /* Additional styles to override existing CSS */
    .card-body {
      padding: 80px; /* Increase the padding to give more space around the form */
    }
    
    /* Optional: Adjust the label width for better alignment */
    .card-body label {
      display: inline-block;
      width: 300px;
      margin-bottom: 20px;
    }
    .project-name-input {
    font-size: 17px; /* Adjust the font size as desired */
  }
  .checkbox-wrapper-44 input[type="checkbox"] {
  display: none;
  visibility: hidden;
}

.checkbox-wrapper-44 *,
  .checkbox-wrapper-44 *::before,
  .checkbox-wrapper-44 *::after {
  box-sizing: border-box;
}

.checkbox-wrapper-44 .toggleButton {
  cursor: pointer;
  display: block;
  transform-origin: 50% 50%;
  transform-style: preserve-3d;
  transition: transform 0.14s ease;
}

.checkbox-wrapper-44 .toggleButton:active {
  transform: rotateX(30deg);
}

.checkbox-wrapper-44 .toggleButton input + div {
  border: 3px solid rgba(0, 0, 0, 0.2);
  border-radius: 50%;
  position: relative;
  width: 44px;
  height: 44px;
}

.checkbox-wrapper-44 .toggleButton input + div svg {
  fill: none;
  stroke-width: 3.6;
  stroke: #000;
  stroke-linecap: round;
  stroke-linejoin: round;
  width: 44px;
  height: 44px;
  display: block;
  position: absolute;
  left: -3px;
  top: -3px;
  right: -3px;
  bottom: -3px;
  z-index: 1;
  stroke-dashoffset: 124.6;
  stroke-dasharray: 0 162.6 133 29.6;
  transition: all 0.4s ease 0s;
}

.checkbox-wrapper-44 .toggleButton input + div:before,
  .checkbox-wrapper-44 .toggleButton input + div:after {
  content: "";
  width: 3px;
  height: 16px;
  background: #000;
  position: absolute;
  left: 50%;
  top: 50%;
  border-radius: 5px;
}

.checkbox-wrapper-44 .toggleButton input + div:before {
  opacity: 0;
  transform: scale(0.3) translate(-50%, -50%) rotate(45deg);
  -webkit-animation: bounceInBefore-44 0.3s linear forwards 0.3s;
  animation: bounceInBefore-44 0.3s linear forwards 0.3s;
}

.checkbox-wrapper-44 .toggleButton input + div:after {
  opacity: 0;
  transform: scale(0.3) translate(-50%, -50%) rotate(-45deg);
  -webkit-animation: bounceInAfter-44 0.3s linear forwards 0.3s;
  animation: bounceInAfter-44 0.3s linear forwards 0.3s;
}

.checkbox-wrapper-44 .toggleButton input:checked + div svg {
  stroke-dashoffset: 162.6;
  stroke-dasharray: 0 162.6 28 134.6;
  transition: all 0.4s ease 0.2s;
}

.checkbox-wrapper-44 .toggleButton input:checked + div:before {
  opacity: 0;
  transform: scale(0.3) translate(-50%, -50%) rotate(45deg);
  -webkit-animation: bounceInBeforeDont-44 0.3s linear forwards 0s;
  animation: bounceInBeforeDont-44 0.3s linear forwards 0s;
}

.checkbox-wrapper-44 .toggleButton input:checked + div:after {
  opacity: 0;
  transform: scale(0.3) translate(-50%, -50%) rotate(-45deg);
  -webkit-animation: bounceInAfterDont-44 0.3s linear forwards 0s;
  animation: bounceInAfterDont-44 0.3s linear forwards 0s;
}

@-webkit-keyframes bounceInBefore-44 {
  0% {
    opacity: 0;
    transform: scale(0.3) translate(-50%, -50%) rotate(45deg);
  }

  50% {
    opacity: 0.9;
    transform: scale(1.1) translate(-50%, -50%) rotate(45deg);
  }

  80% {
    opacity: 1;
    transform: scale(0.89) translate(-50%, -50%) rotate(45deg);
  }

  100% {
    opacity: 1;
    transform: scale(1) translate(-50%, -50%) rotate(45deg);
  }
}

@keyframes bounceInBefore-44 {
  0% {
    opacity: 0;
    transform: scale(0.3) translate(-50%, -50%) rotate(45deg);
  }

  50% {
    opacity: 0.9;
    transform: scale(1.1) translate(-50%, -50%) rotate(45deg);
  }

  80% {
    opacity: 1;
    transform: scale(0.89) translate(-50%, -50%) rotate(45deg);
  }

  100% {
    opacity: 1;
    transform: scale(1) translate(-50%, -50%) rotate(45deg);
  }
}

@-webkit-keyframes bounceInAfter-44 {
  0% {
    opacity: 0;
    transform: scale(0.3) translate(-50%, -50%) rotate(-45deg);
  }

  50% {
    opacity: 0.9;
    transform: scale(1.1) translate(-50%, -50%) rotate(-45deg);
  }

  80% {
    opacity: 1;
    transform: scale(0.89) translate(-50%, -50%) rotate(-45deg);
  }

  100% {
    opacity: 1;
    transform: scale(1) translate(-50%, -50%) rotate(-45deg);
  }
}

@keyframes bounceInAfter-44 {
  0% {
    opacity: 0;
    transform: scale(0.3) translate(-50%, -50%) rotate(-45deg);
  }

  50% {
    opacity: 0.9;
    transform: scale(1.1) translate(-50%, -50%) rotate(-45deg);
  }

  80% {
    opacity: 1;
    transform: scale(0.89) translate(-50%, -50%) rotate(-45deg);
  }

  100% {
    opacity: 1;
    transform: scale(1) translate(-50%, -50%) rotate(-45deg);
  }
}

@-webkit-keyframes bounceInBeforeDont-44 {
  0% {
    opacity: 1;
    transform: scale(1) translate(-50%, -50%) rotate(45deg);
  }

  100% {
    opacity: 0;
    transform: scale(0.3) translate(-50%, -50%) rotate(45deg);
  }
}

@keyframes bounceInBeforeDont-44 {
  0% {
    opacity: 1;
    transform: scale(1) translate(-50%, -50%) rotate(45deg);
  }

  100% {
    opacity: 0;
    transform: scale(0.3) translate(-50%, -50%) rotate(45deg);
  }
}

@-webkit-keyframes bounceInAfterDont-44 {
  0% {
    opacity: 1;
    transform: scale(1) translate(-50%, -50%) rotate(-45deg);
  }

  100% {
    opacity: 0;
    transform: scale(0.3) translate(-50%, -50%) rotate(-45deg);
  }
}

@keyframes bounceInAfterDont-44 {
  0% {
    opacity: 1;
    transform: scale(1) translate(-50%, -50%) rotate(-45deg);
  }

  100% {
    opacity: 0;
    transform: scale(0.3) translate(-50%, -50%) rotate(-45deg);
  }
}
.checkbox-wrapper-44 {
  display: flex;
  align-items: center;
  width: 200px; /* Adjust the width as desired */
}

.text {
  font-size: large;
  margin-right: 15px;
  font-weight: bold;
}
.input-container {
  position: relative;
  margin: 50px auto;
  width: 190px;
}

.input-container input[type="text"] {
  font-size: 20px;
  color: black;
  border: none;
  border-bottom: 2px solid #a5a2a2;
  outline: none;
  width: 100%;
  background-color: transparent;
}

.label {
  transition: all 0.3s ease;
  color: #d3d2d2;
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none;
}

.input-container input[type="text"]:focus~.label,
.input-container input[type="text"]:valid~.label {
  top: -20px;
  transition: 0.3s;
  color: rgb(0, 0, 0);
}

.input-container .underline {
  position: absolute;
  bottom: 4px;
  left: -7px;
  height: 2px;
  width: 110%;
  background-color: rgb(0, 0, 0);
  transform: scaleX(0);
}

.input-container .sideline {
  position: relative;
  bottom: 15px;
  right: 18px;
  height: 2px;
  width: 18%;
  background-color: rgb(0, 0, 0);
  transform: scaleX(0);
  rotate: 90deg;
}

.input-container .upperline {
  position: absolute;
  bottom: 30px;
  left: -8px;
  height: 2px;
  width: 110%;
  background-color: rgb(0, 0, 0);
  transform: scaleX(0);
}

.input-container .line {
  position: relative;
  bottom: 17px;
  left: 178px;
  height: 2px;
  width: 18%;
  background-color: rgb(0, 0, 0);
  transform: scaleX(0);
  rotate: 90deg;
}

.input-container input[type="text"]:focus~.underline,
.input-container input[type="text"]:valid~.underline {
  transform: scaleX(1);
  transition: 1s;
}

.input-container input[type="text"]:focus~.sideline,
.input-container input[type="text"]:valid~.sideline {
  transform: scaleX(1);
  transition: 1s;
}

.input-container input[type="text"]:focus~.upperline,
.input-container input[type="text"]:valid~.upperline {
  transform: scaleX(1);
  transition: 1s;
}

.input-container input[type="text"]:focus~.line,
.input-container input[type="text"]:valid~.line {
  transform: scaleX(1);
  transition: 1s;
}
.animation-fade-in {
      animation: fade-in 1s ease-in-out forwards;
      opacity: 0;
    }

    @keyframes fade-in {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }
  </style>
 
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link href="main-template/img/icon.png"  rel="icon">
  <link href="main-template/img/apple-touch-icon.png" rel="apple-touch-icon">
  <title>
The Hive Hub  </title>
  <!--     Fonts and icons     -->
  <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet" />
  <!-- Nucleo Icons -->
  <link href="../assets/css/nucleo-icons.css" rel="stylesheet" />
  <link href="../assets/css/nucleo-svg.css" rel="stylesheet" />
  <!-- Font Awesome Icons -->
  <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
  <link href="../assets/css/nucleo-svg.css" rel="stylesheet" />
  <!-- CSS Files -->
  <link id="pagestyle" href="../assets/css/argon-dashboard.css?v=2.0.4" rel="stylesheet" />
</head>

<body class="">
  <!-- Navbar -->
 
  <!-- End Navbar -->
  <main class="main-content  mt-0">
    <div class="page-header align-items-start min-vh-50 pt-5 pb-11 m-3 border-radius-lg" >
      <div class="container">
        <div class="row justify-content-center">
          <div class="col-lg-5 text-center mx-auto">
           

            <h4 style="font-size:xx-large" class="bigger-label animation-fade-in">To proceed, please indicate your project Pack.</h4>
          </div>
        </div>
      </div>
    </div>
    <div class="container" style="height: 400px;">
      <div class="row mt-lg-n10 mt-md-n11 mt-n10 justify-content-center">
        <div class="card-body custom-form-width"  >
          <div class="card z-index-0">
           
            <div class="row px-xl-5 px-sm-4 px-3">
              
              
              
              
              <div class="mt-2 position-relative text-center">
                
              </div>
            </div>
            <div class="card-body custom-form-width">
              

              <form id="createProjectForm" action="/saved-project" method="POST">
                
               
                <div>
                   
                  <div for="firstcoding" class="checkbox-wrapper-44">
                    <label class="toggleButton" >
                      <input type="checkbox" name="coding" id="coding" data-price="100"  >
 
                      <div>
                        <svg viewBox="0 0 44 44">
                          <path transform="translate(-2.000000, -2.000000)" d="M14,24 L21,31 L39.7428882,11.5937758 C35.2809627,6.53125861 30.0333333,4 24,4 C12.95,4 4,12.95 4,24 C4,35.05 12.95,44 24,44 C35.05,44 44,35.05 44,24 C44,19.3 42.5809627,15.1645919 39.7428882,11.5937758"></path>
                        </svg>
                      </div>

                    </label>
                    <span style="margin-left: 100px;" class="text">coding</span>

                  </div>

                  <div for="Testing" class="checkbox-wrapper-44">

                    <label  class="toggleButton">
                      <input name="Testing" id="Testing" data-price="120" type="checkbox">
                      <div>
                        <svg viewBox="0 0 44 44">
                          <path transform="translate(-2.000000, -2.000000)" d="M14,24 L21,31 L39.7428882,11.5937758 C35.2809627,6.53125861 30.0333333,4 24,4 C12.95,4 4,12.95 4,24 C4,35.05 12.95,44 24,44 C35.05,44 44,35.05 44,24 C44,19.3 42.5809627,15.1645919 39.7428882,11.5937758"></path>
                        </svg>
                      </div>
                    </label>
                    <span  style="margin-left: 100px;" class="text">testing</span>
                    <p  style="margin-left: 150px; width: 50px;" id="priceLabel"> price : $0</p>


                  </div>
                  
                   





                 


                  <div for="deployment" class="checkbox-wrapper-44">

                    <label  class="toggleButton">
                      <input name="deployment" id="deployment" data-price="50" type="checkbox">
                      <div>
                        <svg viewBox="0 0 44 44">
                          <path transform="translate(-2.000000, -2.000000)" d="M14,24 L21,31 L39.7428882,11.5937758 C35.2809627,6.53125861 30.0333333,4 24,4 C12.95,4 4,12.95 4,24 C4,35.05 12.95,44 24,44 C35.05,44 44,35.05 44,24 C44,19.3 42.5809627,15.1645919 39.7428882,11.5937758"></path>
                        </svg>
                      </div>
                    </label>
                    <span style="margin-left: 100px;" class="text">deployment</span>

                    </div>
                    <div style="text-align: center; margin-left: 220px;">
        
        
                     
                    
                      <div  style="margin-top: 60px;" class="input-container">
                        <input required="" id="maxBudget" name="maxBudget" type="text">
                        <label style="font-size: large;" class="label" for="maxBudget" for="input">Enter your budget</label>
                        <div class="underline"></div>
                        <div class="sideline"></div>
                        <div class="upperline"></div>
                        <div class="line"></div>
                    </div>
                    
                    
                    
                    
                    </div>
                   
                </div>
                
                

                <input type="hidden" name="backend" value="<%= backend %>">
                <input type="hidden" name="frontend" value="<%= frontend %>">
                <input type="hidden" name="database" value="<%= database %>">
                <input type="hidden" name="category" value="<%= category %>">
                <input type="hidden" name="projectName" value="<%= projectName %>">

                <input type="hidden" name="projectType" value="<%= projectType %>">
                <input type="hidden" name="paymentMethod" value="<%= paymentMethod %>">
                <input type="hidden" name="startDate" value="<%= startDate %>">
                <input type="hidden" name="endDate" value="<%= endDate %>">



            
                  
                
                  <div style="margin-top: 85px;">
              
                
                    <button id="cancelButtonTech" type="button" class="btn btn-white-text mx-2 float-right">Go Back</button>      
                    <button id="resetButton" type="button" class="btn btn-white-text mx-2 float-right">Reset</button>
              
                    <button   type="submit" class="btn btn-white-text mx-2 float-right">NEXT</button>
                  </div>

              </form>
              
              <script>
      // Validate input to accept only numbers
const inputElement = document.getElementById('maxBudget');
inputElement.addEventListener('input', function(event) {
  const value = event.target.value;
  event.target.value = value.replace(/\D/g, '');
}); 
               
                function updatePrice() {
                  // Get the project details and calculate the total price
                  const coding = document.getElementById('coding').checked;
                  const Testing = document.getElementById('Testing').checked;
                  const deployment = document.getElementById('deployment').checked;
              
                  let totalPrice = 0;
                  if (coding) {
                    totalPrice += 2000;
                  }
                  if (Testing) {
                    totalPrice += 1700;
                  }
                  if (deployment) {
                    totalPrice += 1200;
                  }
              
                  // Update the price label
                  const priceLabel = document.getElementById('priceLabel');
                  priceLabel.textContent = ` price : $${totalPrice}`;
                }
              
                // Attach event listeners to the checkboxes
                const checkboxes = document.querySelectorAll('input[type="checkbox"]');
                checkboxes.forEach(checkbox => {
                  checkbox.addEventListener('change', updatePrice);
                });

                  // Handle the "NEXT" button click event
                  const nextButton = document.querySelector('form#createProjectForm button[type="submit"]');
  nextButton.addEventListener('click', function(event) {
    event.preventDefault(); // Prevent form submission
                         const priceLabel = document.getElementById('priceLabel');
                         const finalPrice = priceLabel.textContent;
                         const maxBudgetInput = document.getElementById('maxBudget');
                         const maxBudget = maxBudgetInput.value;
                            if (maxBudget < 300) {
                               alert('Please enter a budget of at least $300.');
                              return;
                                                    }
                            const form = document.getElementById('createProjectForm');
                            form.submit();

    
  });
  const resetButton = document.getElementById('resetButton');
  resetButton.addEventListener('click', function() {
    const form = document.querySelector('form');
    form.reset(); 
  });
  const cancelButtonTech = document.getElementById('cancelButtonTech');
    cancelButtonTech.addEventListener('click', goBack);
  
    function goBack() {
      history.back(); // Go back to the previous page
    }
          
          
              document.getElementById("cancelButtonTech").addEventListener("click", function() {
                window.history.back(); // Go back to the previous page
              });
              </script>
              
  <!-- Github buttons -->
  <script async defer src="https://buttons.github.io/buttons.js"></script>
  <!-- Control Center for Soft Dashboard: parallax effects, scripts for the example pages etc -->
  <script src="../assets/js/argon-dashboard.min.js?v=2.0.4"></script>
</body>

</html>
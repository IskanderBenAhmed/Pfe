<!DOCTYPE html>
<html lang="en">
<head>
  <style>
 

.text {
  height: 100%;
  width: 60px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-end;
  color: rgb(252, 250, 250);
  z-index: 1;
  transition-duration: .3s;
  font-size: 1.04em;
  font-weight: bold;
}


.text-xxl {
  font-size: 13px; /* Adjust the font size as needed */
}
.typing {
  width: 400px;
      overflow: hidden;
      white-space: nowrap;
      animation: typing 1.5s steps(12, end), cursor .2s steps(12, end) infinite;
      color: white;
    }

    @keyframes typing {
      from { width: 0; }
    }

    @keyframes cursor {
      50% { border-color: transparent; }
    }

    button {
  --color: #000000;
  font-family: inherit;
  display: inline-block;
  width: 6em;
  height: 2.6em;
  line-height: 2.5em;
  overflow: hidden;
  margin: 20px;
  font-size: 17px;
  z-index: 1;
  color: var(--color);
  border: 2px solid var(--color);
  border-radius: 6px;
  position: relative;
}

button::before {
  position: absolute;
  content: "";
  background: var(--color);
  width: 150px;
  height: 200px;
  z-index: -1;
  border-radius: 50%;
}

button:hover {
  color: white;
}

button:before {
  top: 100%;
  left: 100%;
  transition: .3s all;
}

button:hover::before {
  top: -30px;
  left: -30px;
}

.animation-fade-in {
      animation: fade-in 1s ease-in-out forwards;
      opacity: 0;
    }

    @keyframes fade-in {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }
    .custom-select-wrapper {
  position: relative;
  display: inline-block;
  width: 200px; /* Adjust the width as needed */
}

.custom-select-wrapper select {
  width: 60%;
  padding: 10px;
  border: 1px solid #cccccc;
  background-color: #ffffff;
  appearance: none;
  outline: none;
  cursor: pointer;
}

.custom-select-icon {
  position: absolute;
  top: 50%;
  right:100px;
  transform: translateY(-50%);
  width: 8px;
  height: 8px;
  border: solid #000000;
  border-width: 0 2px 2px 0;
  display: inline-block;
  padding: 2px;
  transform: rotate(45deg);
  pointer-events: none;
}
.custom-dropdown {
  position: relative;
  display: inline-block;
}

.custom-dropdown select {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  padding: 8px;
  border: none;
  border-radius: 4px;
  background-color: #f2f2f2;
  transition: background-color 0.3s ease;
}

.custom-dropdown:hover select {
  background-color: #e6e6e6;
}

.custom-dropdown select:focus {
  outline: none;
  background-color: #e6e6e6;
}

.dropdown-arrow {
  position: absolute;
  top: 50%;
  right: 8px;
  transform: translateY(-50%);
  width: 0;
  height: 0;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top: 5px solid #999999;
  transition: transform 0.3s ease;
}

.custom-dropdown:hover .dropdown-arrow {
  transform: translateY(-50%) rotate(180deg);
}



  </style>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18/dist/sweetalert2.min.css">

  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link href="main-template/img/icon.png"  rel="icon">
  <link href="main-template/img/apple-touch-icon.png" rel="apple-touch-icon">
  <title>The Hive Hub</title>
  <!-- Fonts and icons -->
  <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet"/>
  <!-- Nucleo Icons -->
  <link href="../assets/css/nucleo-icons.css" rel="stylesheet"/>
  <link href="../assets/css/nucleo-svg.css" rel="stylesheet"/>
  <!-- Font Awesome Icons -->
  <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
  <!-- CSS Files -->
  <link id="pagestyle" href="../assets/css/argon-dashboard.css?v=2.0.4" rel="stylesheet"/>
</head>
<body class="">
  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg position-absolute top-0 z-index-3 w-100 shadow-none my-3 navbar-transparent mt-4">
    <div class="container">
      <a class="navbar-brand font-weight-bolder ms-lg-0 ms-3 text-white" href="/">The Hive Hub</a>
      <button class="navbar-toggler shadow-none ms-2" type="button" data-bs-toggle="collapse" data-bs-target="#navigation" aria-controls="navigation" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon mt-2">
          <span class="navbar-toggler-bar bar1"></span>
          <span class="navbar-toggler-bar bar2"></span>
          <span class="navbar-toggler-bar bar3"></span>
        </span>
      </button>
      <div class="collapse navbar-collapse" id="navigation">
        <ul class="navbar-nav mx-auto">
          <li class="nav-item">
            <a class="nav-link d-flex align-items-center me-2 active" aria-current="page" href="/admin">
              <i class="fa fa-chart-pie opacity-6 me-1"></i>
              home
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link me-2" href="/register">
              <i class="fas fa-user-circle opacity-6 me-1"></i>
              Sign Up
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link me-2" href="/login">
              <i class="fas fa-key opacity-6 me-1"></i>
              Sign In
            </a>
          </li>
        </ul>
       
      </div>
      
        </ul>
      </div>
    </div>
  </nav>
  <!-- End Navbar -->
  <main class="main-content mt-0">
    <div class="page-header align-items-start min-vh-50 pt-5 pb-11 m-3 border-radius-lg" style="background-image: url('https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard-pro/assets/img/signup-cover.jpg'); background-position: top;">
      <span class="mask bg-gradient-dark opacity-6"></span>
      <div class="container">
        <div class="row justify-content-center">
          <div class="col-lg-5 text-center mx-auto"><br><br><br><br>
            <h2 style="color: #ffffff;" class="bigger-label animation-fade-in" style="margin-left: 45px;">All Projects</h2>
          </div>
        </div>
      </div>
    </div>
    <div class="container">
      <div class="row mt-lg-n10 mt-md-n11 mt-n10 justify-content-center">
        <div class="card mb-4">
          <!-- Add the filter dropdown -->
          <div class="card-body pt-4 p-3">
            <ul class="list-group">
              <% projects.forEach(project => { %>
              <li class="list-group-item border-0 d-flex p-4 mb-2 mt-3 bg-gray-100 border-radius-lg">
                <div class="d-flex flex-column">
                  <h6 class="mb-3 text-sm"><%= project.projectName %></h6>
                  <span class="mb-2 text-xs">Backend: <span class="text-dark font-weight-bold ms-sm-2"><%= project.backend %></span></span>
                  <span class="mb-2 text-xs">Frontend: <span class="text-dark ms-sm-2 font-weight-bold"><%= project.frontend %></span></span>
                  <span class="mb-2 text-xs">Database: <span class="text-dark ms-sm-2 font-weight-bold"><%= project.database %></span></span>
                  <span class="mb-2 text-xs">Category: <span class="text-dark ms-sm-2 font-weight-bold"><%= project.category %></span></span>
                  <span class="mb-2 text-xs">Project Type: <span class="text-dark ms-sm-2 font-weight-bold"><%= project.projectType %></span></span>
                  <span class="mb-2 text-xs">Status: <span class="text-dark ms-sm-2 font-weight-bold"><%= project.status %></span></span>
                  <span class="mb-2 text-xs">Start Date: <span class="text-dark ms-sm-2 font-weight-bold"><%= project.startDate.toLocaleDateString(undefined, { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }) %></span></span>
                  <span class="mb-2 text-xs">End Date: <span class="text-dark ms-sm-2 font-weight-bold"><%= project.endDate.toLocaleDateString(undefined, { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }) %></span></span>
                  <span class="mb-2 text-xs">Estimated Price: <span class="text-dark ms-sm-2 font-weight-bold"><%= project.estimatedPrice %></span></span>
                  <span class="mb-2 text-xs">Max Budget: <span class="text-dark ms-sm-2 font-weight-bold"><%= project.maxBudget %></span></span>
                  <span class="mb-2 text-xs">Pack: <span class="text-dark ms-sm-2 font-weight-bold"><%= project.pack.join(', ') %></span></span>
                  <span class="mb-2 text-xs">Created By: <span class="text-dark ms-sm-2 font-weight-bold"><%= project.createdBy %></span></span>
                </div>
                <div class="ms-auto text-end">
                  <form data-project-id="<%= project._id %>" class="project-form">
                    <div class="custom-dropdown">
                      <select class="form-control" name="status">
                        <option value="" disabled selected>Select status</option>
                        <option value="pending" <% if (project.status === 'pending') { %>selected<% } %>>Pending</option>
                        <option value="approved" <% if (project.status === 'approved') { %>selected<% } %>>Approved</option>
                        <option value="in-progress" <% if (project.status === 'in-progress') { %>selected<% } %>>In Progress</option>
                        <option value="rejected" <% if (project.status === 'rejected') { %>selected<% } %>>Rejected</option>
                        <option value="completed" <% if (project.status === 'completed') { %>selected<% } %>>Completed</option>
                      </select>
                      <span class="dropdown-arrow"></span>
                    </div>
                    <button type="submit" class="btn btn-secondary mt-3">Save</button>
                  </form>
                </div>
              </li>
              <% }); %>
            </ul>
          </div>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18/dist/sweetalert2.min.js"></script>
        <script>
          
          // Add event listener to status dropdowns
          const projectForms = document.querySelectorAll('.project-form');
          projectForms.forEach(form => {
            form.addEventListener('submit', function(event) {
              event.preventDefault(); // Prevent the default form submission
        
              const project_id = this.getAttribute('data-project-id');
              const selectedStatus = this.querySelector('select').value;
        
              // If the selected status is "Rejected," show the SweetAlert2 popup
              if (selectedStatus === 'rejected') {
                Swal.fire({
                  position: 'center',
                  icon: 'warning',
                  title: 'Rejection Reason',
                  text: 'Please enter the reason for rejection:',
                  input: 'text',
                  inputAttributes: {
                    required: true,
                  },
                  showCancelButton: true,
                  confirmButtonText: 'Save',
                }).then((result) => {
                  if (result.isConfirmed) {
                    const rejectionReason = result.value;
                    // Send AJAX request to update status and rejection reason
                    const xhr = new XMLHttpRequest();
                    xhr.open('POST', `/projects/${project_id}/status`, true);
                    xhr.setRequestHeader('Content-Type', 'application/json');
                    xhr.onreadystatechange = function() {
                      if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                          // Status and rejection reason updated successfully
                          console.log('Status and rejection reason updated');
                          // Show the success alert
                          Swal.fire({
                            icon: 'success',
                            title: 'Status Updated!',
                            text: 'The project status has been successfully updated.',
                            timer: 3000, // Auto close after 3 seconds
                            timerProgressBar: true,
                            showConfirmButton: false
                          }).then(() => {
                            // Reload the page to reflect the changes
                            location.reload();
                          });
                        } else {
                          // Error handling if the request fails
                          console.error('Error updating project status:', xhr.responseText);
                        }
                      }
                    };
                    xhr.send(JSON.stringify({ status: selectedStatus, rejection_reason: rejectionReason }));
                  }
                });
              } else {
                // If status is not "Rejected," update status only without rejection reason
                // Send AJAX request to update status
                const xhr = new XMLHttpRequest();
                xhr.open('POST', `/projects/${project_id}/status`, true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.onreadystatechange = function() {
                  if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                      // Status updated successfully
                      console.log('Status updated');
                      // Show the success alert
                      Swal.fire({
                        icon: 'success',
                        title: 'Status Updated!',
                        text: 'The project status has been successfully updated.',
                        timer: 3000, // Auto close after 3 seconds
                        timerProgressBar: true,
                        showConfirmButton: false
                      }).then(() => {
                        // Reload the page to reflect the changes
                        location.reload();
                      });
                    } else {
                      // Error handling if the request fails
                      console.error('Error updating project status:', xhr.responseText);
                    }
                  }
                };
                xhr.send(JSON.stringify({ status: selectedStatus }));
              }
            });
          });
        </script>
        

      </div>
    </div>
  </main>
  
  <!-- Core JS Files -->
  <script src="../assets/js/core/popper.min.js"></script>
  <script src="../assets/js/core/bootstrap.min.js"></script>
  <script src="../assets/js/plugins/perfect-scrollbar.min.js"></script>
  <script src="../assets/js/plugins/smooth-scrollbar.min.js"></script>
  <script>
    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
      var options = {
        damping: '0.5'
      };
      Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }
  </script>
  <!-- Github buttons -->
  <script async defer src="https://buttons.github.io/buttons.js"></script>
  <!-- Control Center for Soft Dashboard: parallax effects, scripts for the example pages, etc -->
  <script src="../assets/js/argon-dashboard.min.js?v=2.0.4"></script>
  <!--  Notifications Plugin    -->
  <script src="../assets/js/plugins/notify.min.js"></script>
</body>
</html>
